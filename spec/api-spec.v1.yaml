openapi: 3.0.0
info:
  title: api-spec-v1
  version: '1.0'
  contact:
    name: LUMASERV Support Team
    email: support@lumaserv.com
  description: LUMASERV API
servers:
  - url: 'https://connect.nicapi.eu/api/v1'
    description: Live
tags:
  - name: cloudserver
    description: CloudServer Management
  - name: firewall
    description: Firewall Management
paths:
  /cloud/servers:
    get:
      summary: getCloudServers
      tags:
        - cloudserver
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCloudServerResponse'
      operationId: getCloudServers
      description: Returns all cloudservers
    post:
      summary: createCloudServer
      operationId: createCloudServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleCloudServerResponse'
      description: Creates a new cloudserver
      tags:
        - cloudserver
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCloudServerRequest'
  '/cloud/servers/{id}':
    parameters:
      - schema:
          type: integer
          minimum: 1
        name: id
        in: path
        required: true
    get:
      summary: getCloudServer
      tags:
        - cloudserver
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleCloudServerResponse'
      operationId: getCloudServer
      description: Returns a single cloudserver
    put:
      summary: updateCloudServer
      operationId: updateCloudServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleCloudServerResponse'
      description: Updates a cloudserver
      tags:
        - cloudserver
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCloudServerRequest'
    delete:
      summary: deleteCloudServer
      operationId: deleteCloudServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
      description: Deletes a cloudserver
      tags:
        - cloudserver
  '/cloud/servers/{id}/firewall/rules':
    parameters:
      - schema:
          type: integer
          minimum: 1
        name: id
        in: path
        required: true
    get:
      summary: getCloudServerFirewallRules
      tags:
        - cloudserver
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFirewallRuleResponse'
      operationId: getCloudServerFirewallRules
      description: Returns all firewall rules of this cloud server
    post:
      summary: createCloudServerFirewallRule
      operationId: createCloudServerFirewallRule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFirewallRuleResponse'
      tags:
        - cloudserver
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirewallRuleRequest'
      description: Creates a new firewall rule for this cloud server
  '/cloud/servers/{id}/firewall/rules/{rule_id}':
    parameters:
      - schema:
          type: integer
          minimum: 1
        name: id
        in: path
        required: true
      - schema:
          type: integer
          minimum: 1
        name: rule_id
        in: path
        required: true
    get:
      summary: getCloudServerFirewallRule
      tags:
        - cloudserver
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFirewallRuleResponse'
      operationId: getCloudServerFirewallRule
      description: Returns a single firewall rule
    put:
      summary: updateCloudServerFirewallRule
      operationId: updateCloudServerFirewallRule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFirewallRuleResponse'
      tags:
        - cloudserver
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirewallRuleRequest'
        description: ''
      description: Updates the firewall rule
    delete:
      summary: deleteCloudServerFirewallRule
      operationId: deleteCloudServerFirewallRule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
      tags:
        - cloudserver
      description: Deletes the firewall rule
  /cloud/firewall/rule-sets:
    get:
      summary: getFirewallRuleSets
      tags:
        - firewall
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFirewallRuleSetResponse'
      operationId: getFirewallRuleSets
      description: Returns all firewall rulesets
    post:
      summary: createFirewallRuleSet
      operationId: createFirewallRuleSet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFirewallRuleSetResponse'
      tags:
        - firewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirewallRuleSetRequest'
        description: ''
      description: Creates a new firewall ruleset
  '/cloud/firewall/rule-sets/{id}':
    parameters:
      - schema:
          type: integer
          minimum: 1
        name: id
        in: path
        required: true
    get:
      summary: getFirewallRuleSet
      tags:
        - firewall
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFirewallRuleSetResponse'
      operationId: getFirewallRuleSet
      description: Returns a single firewall ruleset
    delete:
      summary: deleteFirewallRuleSet
      operationId: deleteFirewallRuleSet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
      tags:
        - firewall
      description: Deletes the firewall ruleset
    put:
      summary: updateFirewallRuleSet
      operationId: updateFirewallRuleSet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFirewallRuleSetResponse'
      tags:
        - firewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirewallRuleSetRequest'
      description: Updates the firewall ruleset
  '/cloud/firewall/rule-sets/{id}/rules':
    parameters:
      - schema:
          type: integer
          minimum: 1
        name: id
        in: path
        required: true
    get:
      summary: getFirewallRuleSetRules
      tags:
        - firewall
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFirewallRuleResponse'
      operationId: getFirewallRuleSetRules
      description: Returns all firewall rules in the ruleset
    post:
      summary: createFirewallRuleSetRule
      operationId: createFirewallRuleSetRule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFirewallRuleResponse'
      tags:
        - firewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirewallRuleRequest'
        description: ''
      description: Creates a new firewall rule in the ruleset
  '/cloud/firewall/rule-sets/{id}/rules/{rule_id}':
    parameters:
      - schema:
          type: integer
          minimum: 1
        name: id
        in: path
        required: true
      - schema:
          type: integer
          minimum: 1
        name: rule_id
        in: path
        required: true
    get:
      summary: getFirewallRuleSetRule
      tags:
        - firewall
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFirewallRuleResponse'
      operationId: getFirewallRuleSetRule
      description: Returns a single firewall rule
    put:
      summary: updateFirewallRuleSetRule
      operationId: updateFirewallRuleSetRule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFirewallRuleResponse'
      tags:
        - firewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirewallRuleRequest'
      description: Updates the firewall rule
    delete:
      summary: deleteFirewallRuleSetRule
      operationId: deleteFirewallRuleSetRule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
      tags:
        - firewall
      description: Deletes the firewall rule
  /cloud/firewall/address-sets:
    get:
      summary: getFirewallAddressSets
      tags:
        - firewall
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFirewallAddressSetResponse'
      operationId: getFirewallAddressSets
      description: Returns all firewall address sets
    post:
      summary: createFirewallAddressSet
      operationId: createFirewallAddressSet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFirewallAddressSetResponse'
      tags:
        - firewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirewallAddressSetRequest'
      description: Creates a new firewall address set
  '/cloud/firewall/address-sets/{id}':
    parameters:
      - schema:
          type: integer
          minimum: 1
        name: id
        in: path
        required: true
    get:
      summary: getFirewallAddressSet
      tags:
        - firewall
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFirewallAddressSetResponse'
      operationId: getFirewallAddressSet
      description: Returns a single firewall address set
    put:
      summary: updateFirewallAddressSet
      operationId: updateFirewallAddressSet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFirewallAddressSetResponse'
      tags:
        - firewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirewallAddressSetRequest'
      description: Updates the firewall address set
    delete:
      summary: deleteFirewallAddressSet
      operationId: deleteFirewallAddressSet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
      tags:
        - firewall
      description: Deletes the firewall address set
  '/cloud/firewall/address-sets/{id}/addresses':
    parameters:
      - schema:
          type: integer
          minimum: 1
        name: id
        in: path
        required: true
    get:
      summary: getFirewallAddressSetAddresses
      tags:
        - firewall
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFirewallAddressResponse'
      operationId: getFirewallAddressSetAddresses
      description: Returns all addresses in a firewall address set
    post:
      summary: createFirewallAddressSetAddress
      operationId: createFirewallAddressSetAddress
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFirewallAddressResponse'
      tags:
        - firewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirewallAddressRequest'
      description: Adds a new address to the firewall address set
  '/cloud/firewall/address-sets/{id}/addresses/{cidr}':
    parameters:
      - schema:
          type: integer
          minimum: 1
        name: id
        in: path
        required: true
      - schema:
          type: string
        name: cidr
        in: path
        required: true
    get:
      summary: getFirewallAddressSetAddress
      tags:
        - firewall
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFirewallAddressResponse'
      operationId: getFirewallAddressSetAddress
      description: Returns a single firewall address
    put:
      summary: updateFirewallAddressSetAddress
      operationId: updateFirewallAddressSetAddress
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFirewallAddressResponse'
      tags:
        - firewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirewallAddressRequest'
      description: Updates the firewall address
    delete:
      summary: deleteFirewallAddressSetAddress
      operationId: deleteFirewallAddressSetAddress
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
      tags:
        - firewall
      description: Deletes the address from the firewall address set
components:
  schemas:
    CloudServer:
      title: CloudServer
      type: object
      x-tags:
        - cloudserver
      x-examples:
        example:
          id: 8432
          user: john.doe
          title: My Webserver
          hostname: example.com
          cores: 1
          memory: 1024
          template: DEBIAN_10
          max_backups: 0
          max_scheduled_tasks: 0
          created_at: '2020-01-30 00:00:00'
          updated_at: '2020-01-30 00:00:00'
      description: A cloudserver
      properties:
        id:
          type: integer
        user:
          type: string
        title:
          type: string
        hostname:
          type: string
          format: hostname
        cores:
          type: integer
          minimum: 1
        memory:
          type: integer
          minimum: 1024
          multipleOf: 1024
        template:
          type: string
        max_backups:
          type: integer
          minimum: 0
        max_scheduled_tasks:
          type: integer
          minimum: 0
        created_at:
          $ref: '#/components/schemas/Timestamp'
        updated_at:
          $ref: '#/components/schemas/Timestamp'
      required:
        - id
        - user
        - hostname
        - cores
        - memory
        - template
        - max_backups
        - max_scheduled_tasks
        - created_at
        - updated_at
    CloudServerInterface:
      title: CloudServerInterface
      type: object
      x-tags:
        - cloudserver
      description: A network interface of a cloudserver
      x-examples:
        example:
          id: 10001
          netname: eth0
          title: Internet
          mac_address: '00:00:00:00:00:00'
          firewall: true
          network_id: 10001
          created_at: '2020-01-30 00:00:00'
          updated_at: '2020-01-30 00:00:00'
      properties:
        id:
          type: integer
          minimum: 1
        netname:
          type: string
        title:
          type: string
        mac_address:
          type: string
          pattern: '^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$'
        firewall:
          type: boolean
        network_id:
          type: integer
          minimum: 1
        created_at:
          $ref: '#/components/schemas/Timestamp'
        updated_at:
          $ref: '#/components/schemas/Timestamp'
      required:
        - id
        - netname
        - mac_address
        - firewall
        - network_id
        - created_at
        - updated_at
    CloudServerStorage:
      title: CloudServerStorage
      type: object
      x-tags:
        - cloudserver
      x-examples:
        example:
          id: 10001
          title: Boot Drive
          size: 10
          replication: 2
          is_boot: true
          created_at: '2020-01-30 00:00:00'
          updated_at: '2020-01-30 00:00:00'
      description: A storage drive of a cloudserver
      properties:
        id:
          type: integer
          minimum: 1
        title:
          type: string
        size:
          type: integer
          minimum: 10
        replication:
          type: integer
          default: 2
        is_boot:
          type: boolean
        created_at:
          $ref: '#/components/schemas/Timestamp'
        updated_at:
          $ref: '#/components/schemas/Timestamp'
      required:
        - id
        - size
        - replication
        - is_boot
        - created_at
        - updated_at
    FirewallAddress:
      title: FirewallAddress
      type: object
      x-tags:
        - cloudserver
      description: Address in a FirewallAddressSet
      x-examples:
        example:
          id: 10001
          address_set_id: 10001
          cidr: 127.0.0.0/8
          title: Loopback
          created_at: '2020-01-30 00:00:00'
          updated_at: '2020-01-30 00:00:00'
      properties:
        id:
          type: integer
          minimum: 1
        cidr:
          type: string
        title:
          type: string
        created_at:
          $ref: '#/components/schemas/Timestamp'
        updated_at:
          $ref: '#/components/schemas/Timestamp'
      required:
        - id
        - cidr
        - title
        - created_at
        - updated_at
    FirewallAddressSet:
      title: FirewallAddressSet
      type: object
      x-tags:
        - cloudserver
      x-examples:
        example:
          id: 10001
          user: john.doe
          project_uuid: 1de37675-f868-4726-bb1d-b08d89f463f9
          title: Loopback Addresses
          created_at: '2020-01-30 00:00:00'
          updated_at: '2020-01-30 00:00:00'
      properties:
        id:
          type: integer
          minimum: 1
        user:
          type: string
        project_uuid:
          type: string
          format: uuid
        title:
          type: string
        created_at:
          $ref: '#/components/schemas/Timestamp'
        updated_at:
          $ref: '#/components/schemas/Timestamp'
      required:
        - id
        - user
        - title
        - created_at
        - updated_at
    FirewallRule:
      title: FirewallRule
      type: object
      x-tags:
        - cloudserver
      description: A firewall rule or a link to a FirewallRuleSet
      x-examples:
        example:
          id: 10001
          title: Example Rule
          order: 0
          direction: IN
          action: DROP
          interface: net0
          protocol: udp
          source_address: 127.0.0.1
          destination_address_set_id: 10001
          source_port: '1234'
          destination_port: '4321'
          created_at: '2020-01-30 00:00:00'
          updated_at: '2020-01-30 00:00:00'
      properties:
        id:
          type: integer
          minimum: 1
        title:
          type: string
        order:
          type: integer
          exclusiveMinimum: false
          minimum: 0
        linked_rule_set_id:
          type: integer
        direction:
          type: string
          enum:
            - IN
            - OUT
        action:
          type: string
          enum:
            - ACCEPT
            - DROP
            - REJECT
        interface:
          type: string
          enum:
            - net0
            - net1
            - net2
            - net3
        protocol:
          type: string
          enum:
            - udp
            - tcp
        source_address:
          type: string
        source_address_set_id:
          type: integer
        destination_address:
          type: string
        destination_address_set_id:
          type: integer
        source_port:
          type: string
        destination_port:
          type: string
        created_at:
          $ref: '#/components/schemas/Timestamp'
        updated_at:
          $ref: '#/components/schemas/Timestamp'
      required:
        - id
        - title
        - order
        - created_at
        - updated_at
    FirewallRuleSet:
      title: FirewallRuleSet
      type: object
      x-tags:
        - cloudserver
      x-examples:
        example:
          id: 10001
          user: john.doe
          title: Example Ruleset
          project_uuid: 1de37675-f868-4726-bb1d-b08d89f463f9
          created_at: '2020-01-30 00:00:00'
          updated_at: '2020-01-30 00:00:00'
      description: A set of firewall rules
      properties:
        id:
          type: integer
          minimum: 1
        user:
          type: string
        title:
          type: string
        project_uuid:
          type: string
          format: uuid
        created_at:
          $ref: '#/components/schemas/Timestamp'
        updated_at:
          $ref: '#/components/schemas/Timestamp'
      required:
        - id
        - user
        - title
        - created_at
        - updated_at
    Timestamp:
      type: string
      title: Timestamp
      x-examples:
        '2020-01-30 00:00:00': {}
    CreateCloudServerRequest:
      title: CreateCloudServerRequest
      type: object
      x-tags:
        - cloudserver
      properties:
        title:
          type: string
        project_uuid:
          type: string
          format: uuid
        cores:
          type: string
        memory:
          type: string
        template:
          type: string
        password:
          type: string
        storages:
          type: array
          items:
            type: object
            properties:
              size:
                type: integer
                minimum: 5
              replication:
                type: integer
                default: 2
                minimum: 0
            required:
              - size
        networks:
          type: array
          items:
            type: object
            properties:
              network_id:
                type: integer
                minimum: 1
              primary_ipv4:
                type: string
                format: ipv4
              ipv4:
                type: array
                items:
                  type: string
                  format: ipv4
              custom_address:
                type: string
              custom_gateway:
                type: string
                format: ipv4
      required:
        - cores
        - memory
        - template
        - storages
        - networks
    CreateFirewallRuleSetRequest:
      title: CreateFirewallRuleSetRequest
      type: object
      x-tags:
        - firewall
      properties:
        title:
          type: string
        project_uuid:
          type: string
          format: uuid
      required:
        - title
    CreateFirewallAddressSetRequest:
      title: CreateFirewallAddressSetRequest
      type: object
      properties:
        title:
          type: string
        project_uuid:
          type: string
          format: uuid
      required:
        - title
      x-tags:
        - firewall
    CreateFirewallAddressRequest:
      title: CreateFirewallAddressRequest
      type: object
      x-tags:
        - firewall
      description: ''
      properties:
        cidr:
          type: string
        title:
          type: string
      required:
        - cidr
        - title
    CreateFirewallRuleRequest:
      title: CreateFirewallRuleRequest
      type: object
      x-tags:
        - firewall
      properties:
        title:
          type: string
        order:
          type: integer
          minimum: 0
        direction:
          type: string
          enum:
            - IN
            - OUT
        action:
          type: string
          enum:
            - ACCEPT
            - DROP
            - REJECT
        protocol:
          type: string
          enum:
            - tcp
            - udp
        interface:
          type: string
          enum:
            - net0
            - net1
            - net2
            - net3
        source_address:
          type: string
        source_address_set_id:
          type: integer
          minimum: 1
        destination_address:
          type: string
        destination_address_set_id:
          type: integer
          minimum: 1
        source_port:
          type: string
        destination_port:
          type: string
        linked_rule_set_id:
          type: integer
          minimum: 1
      required:
        - title
        - order
    UpdateFirewallAddressSetRequest:
      title: UpdateFirewallAddressSetRequest
      type: object
      properties:
        title:
          type: string
        project_uuid:
          type: string
          format: uuid
      x-tags:
        - firewall
    UpdateFirewallRuleSetRequest:
      title: UpdateFirewallRuleSetRequest
      type: object
      properties:
        title:
          type: string
        project_uuid:
          type: string
          format: uuid
      x-tags:
        - firewall
    UpdateFirewallAddressRequest:
      title: UpdateFirewallAddressRequest
      type: object
      x-tags:
        - firewall
      properties:
        title:
          type: string
    UpdateFirewallRuleRequest:
      title: UpdateFirewallRuleRequest
      type: object
      x-tags:
        - firewall
      properties:
        title:
          type: string
        order:
          type: integer
          minimum: 0
        direction:
          type: string
          enum:
            - IN
            - OUT
        action:
          type: string
          enum:
            - ACCEPT
            - DROP
            - REJECT
        protocol:
          type: string
          enum:
            - tcp
            - udp
        source_address:
          type: string
        source_address_set_id:
          type: integer
          minimum: 1
        destination_address:
          type: string
        destination_address_set_id:
          type: integer
          minimum: 1
        source_port:
          type: string
        destination_port:
          type: string
        linked_address_set_id:
          type: integer
          minimum: 1
    UpdateCloudServerRequest:
      title: UpdateCloudServerRequest
      type: object
      x-tags:
        - cloudserver
      properties:
        title:
          type: string
        project_uuid:
          type: string
          format: uuid
        cores:
          type: integer
        memory:
          type: integer
    ResponseMetadata:
      title: ResponseMetadata
      type: object
      properties:
        clientTransactionId:
          type: string
        serverTransactionId:
          type: string
      required:
        - serverTransactionId
    ResponseMessages:
      title: ResponseMessages
      type: object
      properties:
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/ResponseMessage'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResponseMessage'
        success:
          type: array
          items:
            $ref: '#/components/schemas/ResponseMessage'
      required:
        - warnings
        - errors
        - success
    ResponseMessage:
      title: ResponseMessage
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      required:
        - code
        - message
    SingleCloudServerResponse:
      title: GetCloudServerResponse
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'
        data:
          $ref: '#/components/schemas/CloudServer'
        status:
          type: string
        messages:
          $ref: '#/components/schemas/ResponseMessages'
      x-tags:
        - cloudserver
    ListCloudServerResponse:
      title: ListCloudServerResponse
      type: object
      x-tags:
        - cloudserver
      properties:
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'
        data:
          type: array
          items:
            $ref: '#/components/schemas/CloudServer'
        status:
          type: string
        messages:
          $ref: '#/components/schemas/ResponseMessages'
    GenericResponse:
      title: GenericResponse
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'
        data:
          oneOf:
            - type: object
            - type: array
              items: {}
        status:
          type: string
        messages:
          $ref: '#/components/schemas/ResponseMessages'
    EmptyResponse:
      title: EmptyResponse
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'
        status:
          type: string
        messages:
          $ref: '#/components/schemas/ResponseMessages'
    SingleFirewallAddressSetResponse:
      title: SingleFirewallAddressSetResponse
      type: object
      x-tags:
        - firewall
      properties:
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'
        data:
          $ref: '#/components/schemas/FirewallAddressSet'
        status:
          type: string
        messages:
          $ref: '#/components/schemas/ResponseMessages'
    ListFirewallAddressSetResponse:
      title: ListFirewallAddressSetResponse
      type: object
      x-tags:
        - firewall
      properties:
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'
        data:
          type: array
          items:
            $ref: '#/components/schemas/FirewallAddressSet'
        status:
          type: string
        messages:
          $ref: '#/components/schemas/ResponseMessages'
    SingleFirewallRuleSetResponse:
      title: SingleFirewallRuleSetResponse
      type: object
      x-tags:
        - firewall
      properties:
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'
        data:
          $ref: '#/components/schemas/FirewallRuleSet'
        status:
          type: string
        messages:
          $ref: '#/components/schemas/ResponseMessages'
    ListFirewallRuleSetResponse:
      title: ListFirewallRuleSetResponse
      type: object
      x-tags:
        - firewall
      properties:
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'
        data:
          type: array
          items:
            $ref: '#/components/schemas/FirewallRuleSet'
        status:
          type: string
        messages:
          $ref: '#/components/schemas/ResponseMessages'
    SingleFirewallAddressResponse:
      title: SingleFirewallAddressResponse
      type: object
      x-tags:
        - firewall
      properties:
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'
        data:
          $ref: '#/components/schemas/FirewallAddress'
        status:
          type: string
        messages:
          $ref: '#/components/schemas/ResponseMessages'
    ListFirewallAddressResponse:
      title: ListFirewallAddressResponse
      type: object
      x-tags:
        - firewall
      properties:
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'
        data:
          type: array
          items:
            $ref: '#/components/schemas/FirewallAddress'
        status:
          type: string
        messages:
          $ref: '#/components/schemas/ResponseMessages'
    SingleFirewallRuleResponse:
      title: SingleFirewallRuleResponse
      type: object
      x-tags:
        - firewall
      properties:
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'
        data:
          $ref: '#/components/schemas/FirewallRule'
        status:
          type: string
        messages:
          $ref: '#/components/schemas/ResponseMessages'
    ListFirewallRuleResponse:
      title: ListFirewallRuleResponse
      type: object
      x-tags:
        - firewall
      properties:
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'
        data:
          type: array
          items:
            $ref: '#/components/schemas/FirewallRule'
        status:
          type: string
        messages:
          $ref: '#/components/schemas/ResponseMessages'
  securitySchemes:
    AuthToken:
      type: http
      scheme: bearer
      description: ''
security:
  - AuthToken: []
