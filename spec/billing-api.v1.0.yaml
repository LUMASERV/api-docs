openapi: 3.0.0
info:
  title: LUMASERV Billing API
  version: '1.0'
  contact:
    name: LUMASERV Support Team
    email: support@lumaserv.com
  description: LUMASERV Billing API
servers:
  - url: 'https://billing.lumaserv.com'
    description: Live
paths:
  /bank-accounts:
    get:
      summary: getBankAccounts
      tags:
        - payment
      responses:
        '200':
          $ref: '#/components/responses/BankAccountListResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getBankAccounts
      description: Returns all bank accounts
    post:
      summary: createBankAccount
      operationId: createBankAccount
      responses:
        '201':
          $ref: '#/components/responses/BankAccountSingleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Adds a new bank account
      requestBody:
        $ref: '#/components/requestBodies/BankAccountCreateRequest'
      tags:
        - payment
  '/bank-accounts/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: BankAccount ID
    get:
      summary: getBankAccount
      tags:
        - payment
      responses:
        '200':
          $ref: '#/components/responses/BankAccountSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getBankAccount
      description: Returns a single bank account
    put:
      summary: updateBankAccount
      operationId: updateBankAccount
      responses:
        '200':
          $ref: '#/components/responses/BankAccountSingleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Updates the bank account
      requestBody:
        $ref: '#/components/requestBodies/BankAccountUpdateRequest'
      tags:
        - payment
    delete:
      summary: deleteBankAccount
      operationId: deleteBankAccount
      responses:
        '200':
          $ref: '#/components/responses/EmptyResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Deletes a bank account
      tags:
        - payment
  /bank-transactions:
    get:
      summary: getBankTransactions
      tags:
        - payment
      responses:
        '200':
          $ref: '#/components/responses/BankTransactionListResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getBankTransactions
      description: Returns all bank transactions
  '/bank-transactions/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: BankTransaction ID
    get:
      summary: getBankTransaction
      tags:
        - payment
      responses:
        '200':
          $ref: '#/components/responses/BankTransactionSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getBankTransaction
      description: Returns a single bank transaction
  /billing-positions:
    get:
      summary: getBillingPositions
      tags:
        - billing
      responses:
        '200':
          $ref: '#/components/responses/BillingPositionListResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getBillingPositions
      description: Returns all billing positions
    post:
      summary: createBillingPosition
      operationId: createBillingPosition
      responses:
        '201':
          $ref: '#/components/responses/BillingPositionSingleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Creates a new billing position
      requestBody:
        $ref: '#/components/requestBodies/BillingPositionCreateRequest'
      tags:
        - billing
  '/billing-positions/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: BillingPosition ID
    get:
      summary: getBillingPosition
      tags:
        - billing
      responses:
        '200':
          $ref: '#/components/responses/BillingPositionSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getBillingPosition
      description: Returns a single billing position
    put:
      summary: updateBillingPosition
      operationId: updateBillingPosition
      responses:
        '200':
          $ref: '#/components/responses/BillingPositionSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Updates a billing position
      tags:
        - billing
    delete:
      summary: deleteBillingPosition
      operationId: deleteBillingPosition
      responses:
        '200':
          $ref: '#/components/responses/EmptyResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Deletes a billing position
      tags:
        - billing
  /customers:
    get:
      summary: getCustomers
      tags:
        - customers
      responses:
        '200':
          $ref: '#/components/responses/CustomerListResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getCustomers
      description: Returns a list of customers
    post:
      summary: createCustomer
      operationId: createCustomer
      responses:
        '201':
          $ref: '#/components/responses/CustomerSingleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Creates a new customer
      tags:
        - customers
  '/customers/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
        description: Customer ID
    get:
      summary: getCustomer
      tags:
        - customers
      responses:
        '200':
          $ref: '#/components/responses/CustomerSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getCustomer
      description: Returns a single customer
    put:
      summary: updateCustomer
      operationId: updateCustomer
      responses:
        '200':
          $ref: '#/components/responses/CustomerSingleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Updates the customer
      tags:
        - customers
      requestBody:
        $ref: '#/components/requestBodies/CustomerUpdateRequest'
  /customer-transactions:
    get:
      summary: getCustomerTransactions
      tags:
        - billing
      responses:
        '200':
          $ref: '#/components/responses/CustomerListResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getCustomerTransactions
      description: Returns all customer transactions
  '/customer-transactions/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: CustomerTransaction ID
    get:
      summary: getCustomerTransaction
      tags:
        - customers
      responses:
        '200':
          $ref: '#/components/responses/CustomerTransactionSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getCustomerTransaction
      description: Returns a single customer transaction
  /debits:
    get:
      summary: getDebits
      tags:
        - payment
      responses:
        '200':
          $ref: '#/components/responses/DebitListResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getDebits
      description: Returns all debits
  '/debits/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: Debit ID
    get:
      summary: getDebit
      tags:
        - payment
      responses:
        '200':
          $ref: '#/components/responses/DebitSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getDebit
      description: Returns a single debit
  /debit-mandates:
    get:
      summary: getDebitMandates
      tags:
        - payment
      responses:
        '200':
          $ref: '#/components/responses/DebitMandateListResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getDebitMandates
      description: Returns all debit mandates
    post:
      summary: createDebitMandate
      operationId: createDebitMandate
      responses:
        '201':
          $ref: '#/components/responses/DebitMandateSingleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Creates a new debit mandate
      tags:
        - payment
      requestBody:
        $ref: '#/components/requestBodies/DebitMandateCreateRequest'
  '/debit-mandates/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: DebitMandate ID
    get:
      summary: getDebitMandate
      tags:
        - payment
      responses:
        '200':
          $ref: '#/components/responses/DebitMandateSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getDebitMandate
      description: Returns a single debit mandate
  /files:
    get:
      summary: getFiles
      responses:
        '200':
          $ref: '#/components/responses/FileListResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getFiles
      description: Returns all files
      tags:
        - general
  '/files/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: File ID
    get:
      summary: getFile
      responses:
        '200':
          $ref: '#/components/responses/FileSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getFile
      description: Returns a single file
      tags:
        - general
  '/files/{id}/download':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: File ID
    get:
      summary: getFileDownload
      responses:
        '200':
          $ref: '#/components/responses/FileDownloadResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getFileDownload
      description: Returns a download url for the file that is valid for 5 minutes
      tags:
        - general
  /invoices:
    get:
      summary: getInvoices
      tags:
        - billing
      responses:
        '200':
          $ref: '#/components/responses/InvoiceListResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          description: Internal Server Error
      operationId: getInvoices
      description: Returns all invoices
    post:
      summary: createInvoice
      operationId: createInvoice
      responses:
        '201':
          $ref: '#/components/responses/InvoiceSingleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Creates a new invoice
      tags:
        - billing
      requestBody:
        $ref: '#/components/requestBodies/InvoiceCreateRequest'
  '/invoices/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: Invoice ID
    get:
      summary: getInvoice
      tags:
        - billing
      responses:
        '200':
          $ref: '#/components/responses/InvoiceSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getInvoice
      description: Returns a single invoice
    put:
      summary: updateInvoice
      operationId: updateInvoice
      responses:
        '200':
          $ref: '#/components/responses/InvoiceSingleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      tags:
        - billing
      description: Updates an invoice draft
      requestBody:
        $ref: '#/components/requestBodies/InvoiceUpdateRequest'
  '/invoices/{id}/file':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: Invoice ID
    get:
      summary: getInvoiceFile
      tags:
        - billing
      responses:
        '200':
          $ref: '#/components/responses/FileSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getInvoiceFile
      description: Returns the file for the invoice
  /invoice-positions:
    get:
      summary: getInvoicePositions
      tags:
        - billing
      responses:
        '200':
          $ref: '#/components/responses/InvoicePositionListResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getInvoicePositions
      description: Returns all invoice positions
    post:
      summary: createInvoicePosition
      operationId: createInvoicePosition
      responses:
        '201':
          $ref: '#/components/responses/InvoicePositionSingleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Creates a new invoice position
      tags:
        - billing
      requestBody:
        $ref: '#/components/requestBodies/InvoicePositionCreateRequest'
  '/invoice-positions/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: InvoicePosition ID
    get:
      summary: getInvoicePosition
      tags:
        - billing
      responses:
        '200':
          $ref: '#/components/responses/InvoicePositionSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getInvoicePosition
      description: Returns a single invoice position
    put:
      summary: updateInvoicePosition
      operationId: updateInvoicePosition
      responses:
        '200':
          $ref: '#/components/responses/InvoicePositionSingleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Updates the invoice position
      tags:
        - billing
    delete:
      summary: deleteInvoicePosition
      operationId: deleteInvoicePosition
      responses:
        '200':
          $ref: '#/components/responses/EmptyResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Deletes a position for an invoice draft
      tags:
        - billing
  /offers:
    get:
      summary: getOffers
      tags:
        - billing
      responses:
        '200':
          $ref: '#/components/responses/OfferListResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getOffers
      description: Returns all offers
    post:
      summary: createOffer
      operationId: createOffer
      responses:
        '201':
          $ref: '#/components/responses/OfferSingleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      tags:
        - billing
      description: Creates a new offer
      requestBody:
        $ref: '#/components/requestBodies/OfferCreateRequest'
  '/offers/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: Offer ID
    get:
      summary: getOffer
      tags:
        - billing
      responses:
        '200':
          $ref: '#/components/responses/OfferSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getOffer
      description: Returns a single offer
    put:
      summary: updateOffer
      operationId: updateOffer
      responses:
        '200':
          $ref: '#/components/responses/OfferSingleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Updates the offer
      tags:
        - billing
      requestBody:
        $ref: '#/components/requestBodies/OfferUpdateRequest'
  /offer-positions:
    get:
      summary: getOfferPositions
      tags:
        - billing
      responses:
        '200':
          $ref: '#/components/responses/OfferPositionListResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getOfferPositions
      description: Returns all offer positions
    post:
      summary: createOfferPosition
      operationId: createOfferPosition
      responses:
        '201':
          $ref: '#/components/responses/OfferPositionSingleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Creates a new offer position
      tags:
        - billing
      requestBody:
        $ref: '#/components/requestBodies/OfferPositionCreateRequest'
  '/offer-positions/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: OfferPosition ID
    get:
      summary: getOfferPosition
      tags:
        - billing
      responses:
        '200':
          $ref: '#/components/responses/OfferPositionSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getOfferPosition
      description: Returns a single offer position
    put:
      summary: updateOfferPosition
      operationId: updateOfferPosition
      responses:
        '200':
          $ref: '#/components/responses/OfferPositionSingleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Updates the offer position
      tags:
        - billing
      requestBody:
        $ref: '#/components/requestBodies/OfferPositionUpdateRequest'
    delete:
      summary: deleteOfferPosition
      operationId: deleteOfferPosition
      responses:
        '200':
          $ref: '#/components/responses/EmptyResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Deletes an offer position
      tags:
        - billing
  /online-payments:
    get:
      summary: getOnlinePayments
      tags:
        - payment
      responses:
        '200':
          $ref: '#/components/responses/OnlinePaymentListResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getOnlinePayments
      description: Returns all online payments
  '/online-payments/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: OnlinePayment ID
    get:
      summary: getOnlinePayment
      tags:
        - payment
      responses:
        '200':
          $ref: '#/components/responses/OnlinePaymentSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getOnlinePayment
      description: Returns a single online payment
  /payment-reminders:
    get:
      summary: getPaymentReminders
      tags:
        - billing
      responses:
        '200':
          $ref: '#/components/responses/PaymentReminderListResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getPaymentReminders
      description: Returns all payment reminders
    post:
      summary: createPaymentReminder
      operationId: createPaymentReminder
      responses:
        '201':
          $ref: '#/components/responses/PaymentReminderSingleResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      description: Creates a new payment reminder
      tags:
        - billing
      requestBody:
        $ref: '#/components/requestBodies/PaymentReminderCreateRequest'
  '/payment-reminders/{id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: PaymentReminder ID
    get:
      summary: getPaymentReminder
      tags:
        - billing
      responses:
        '200':
          $ref: '#/components/responses/PaymentReminderSingleResponse'
        '401':
          $ref: '#/components/responses/EmptyResponse'
        '403':
          $ref: '#/components/responses/EmptyResponse'
        '404':
          $ref: '#/components/responses/EmptyResponse'
        '500':
          $ref: '#/components/responses/EmptyResponse'
      operationId: getPaymentReminder
      description: Returns a single payment reminder
components:
  schemas:
    ResponseMessages:
      title: ResponseMessages
      type: object
      x-examples:
        example:
          warnings: []
          errors: []
          success:
            - code: 10000
              message: Action successfully executed.
      properties:
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/ResponseMessage'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResponseMessage'
        infos:
          type: array
          items:
            $ref: '#/components/schemas/ResponseMessage'
      required:
        - warnings
        - errors
        - infos
    ResponseMessage:
      title: ResponseMessage
      type: object
      properties:
        key:
          type: string
          example: general.serverError
        message:
          type: string
          example: Action successfully executed.
      required:
        - key
        - message
    ResponseMetadata:
      title: ResponseMetadata
      type: object
      properties:
        transaction_id:
          type: string
          format: uuid
          example: 1428d399-8861-40a5-a85f-6ed4c669bae0
        build_commit:
          type: string
          example: master-a0b1c2d3
        build_timestamp:
          type: string
          example: '2021-09-01 13:37:00'
      required:
        - transaction_id
        - build_commit
        - build_timestamp
    ResponsePagination:
      title: ResponsePagination
      type: object
      properties:
        page:
          type: integer
          example: 1
        page_size:
          type: integer
          example: 25
        total:
          type: integer
          example: 1500
      required:
        - page
        - page_size
        - total
    BankAccount:
      title: BankAccount
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        bank_account_number:
          type: string
        bank_url:
          type: string
        bank_port:
          type: integer
        bank_code:
          type: string
        username:
          type: string
      required:
        - id
    BankTransaction:
      title: BankTransaction
      type: object
      properties:
        id:
          type: string
          format: uuid
        bank_account_id:
          type: string
          format: uuid
        booking_text:
          type: string
        depositor:
          type: string
        reference:
          type: string
        extended_reference:
          type: string
        type:
          type: string
          enum:
            - DEBIT
            - CREDIT
        booking_date:
          type: string
        amount:
          type: string
        bank_code:
          type: string
        account_number:
          type: string
        value_date:
          type: string
        debit_id:
          type: string
          format: uuid
      required:
        - id
    BillingPosition:
      title: BillingPosition
      type: object
      properties:
        id:
          type: string
          format: uuid
        customer_id:
          type: string
          format: uuid
        invoice_position_id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        amount:
          type: string
        price:
          type: string
        vat_rate:
          type: string
        group_key:
          type: string
        available_at:
          type: string
      required:
        - id
        - customer_id
    Customer:
      title: Customer
      type: object
      description: ''
      properties:
        id:
          type: integer
        user_id:
          type: string
          format: uuid
        company_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        street:
          type: string
        street_number:
          type: string
        additional_address:
          type: string
        postal_code:
          type: string
        city:
          type: string
        country_code:
          type: string
        email:
          type: string
        invoice_shipping_type:
          $ref: '#/components/schemas/InvoiceShippingType'
        balance:
          type: number
        credit_limit:
          type: number
        vat_id:
          type: string
        custom_vat_rate:
          type: number
        next_billing_date:
          type: string
        billing_interval:
          $ref: '#/components/schemas/BillingInterval'
      required:
        - id
        - user_id
    InvoiceShippingType:
      type: string
      title: InvoiceShippingType
      enum:
        - EMAIL
        - MAIL
    BillingInterval:
      type: string
      title: BillingInterval
      enum:
        - MONTHLY
        - QUARTERLY
        - SEMI_ANNUAL
        - ANNUAL
    CustomerTransaction:
      title: CustomerTransaction
      type: object
      properties:
        id:
          type: string
          format: uuid
        customer_id:
          type: integer
        title:
          type: string
        amount:
          type: number
        type:
          $ref: '#/components/schemas/CustomerTransactionType'
        object_id:
          type: string
          format: uuid
        date:
          type: string
      required:
        - id
        - customer_id
    DebitMandate:
      title: DebitMandate
      type: object
      properties:
        id:
          type: string
          format: uuid
        customer_id:
          type: integer
        depositor:
          type: string
        street:
          type: string
        street_number:
          type: string
        additional_address:
          type: string
        postal_code:
          type: string
        city:
          type: string
        country_code:
          type: string
        bank_code:
          type: string
        bank_name:
          type: string
        account_number:
          type: string
        signed_at:
          type: string
        valid_until:
          type: string
      required:
        - id
        - customer_id
    Debit:
      title: Debit
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        date:
          type: string
        due_date:
          type: string
      required:
        - id
    FileDownload:
      title: FileDownload
      type: object
      properties:
        file_id:
          type: string
          format: uuid
        url:
          type: string
      required:
        - file_id
        - url
    File:
      title: File
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        state:
          type: string
          enum:
            - DRAFT
            - GENERATED
        type:
          type: string
          enum:
            - CUSTOM
            - INVOICE
            - SERVICE_CONTRACT
            - OFFER
            - PAYMENT_REMINDER
            - DEBIT
        object_id:
          type: string
          format: uuid
      required:
        - id
    InvoicePosition:
      title: InvoicePosition
      type: object
      properties:
        id:
          type: string
          format: uuid
        customer_id:
          type: integer
        invoice_id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        amount:
          type: number
        unit:
          type: string
        price:
          type: number
        vat_rate:
          type: number
        group_key:
          type: string
      required:
        - id
    Invoice:
      title: Invoice
      type: object
      properties:
        id:
          type: string
        customer_id:
          type: integer
        number:
          type: string
        due_at:
          type: string
        state:
          $ref: '#/components/schemas/InvoiceState'
        net_amount:
          type: number
        paid_at:
          type: string
        cancelled_at:
          type: string
    OfferPosition:
      title: OfferPosition
      type: object
      properties:
        id:
          type: string
          format: uuid
        offer_id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        interval:
          type: string
          enum:
            - WEEKLY
            - MONTHLY
            - QUARTERLY
            - SEMI_ANNUAL
            - ANNUAL
        amount:
          type: number
        price:
          type: number
        purchasing_price:
          type: number
        note:
          type: string
        vat_rate:
          type: number
      required:
        - id
        - offer_id
    Offer:
      title: Offer
      type: object
      properties:
        id:
          type: string
          format: uuid
        customer_id:
          type: integer
        number:
          type: string
        net_amount:
          type: number
        amount:
          type: number
        state:
          $ref: '#/components/schemas/OfferState'
      required:
        - id
        - customer_id
    OnlinePayment:
      title: OnlinePayment
      type: object
      properties:
        id:
          type: string
          format: uuid
        customer_id:
          type: integer
        provider:
          type: string
          enum:
            - PAYPAL
        state:
          type: string
          enum:
            - PENDING
            - SUCCESS
            - FAILED
            - CANCELLED
        amount:
          type: number
        external_id:
          type: string
      required:
        - id
    PaymentReminder:
      title: PaymentReminder
      type: object
      properties:
        id:
          type: string
          format: uuid
        customer_id:
          type: integer
        invoice_id:
          type: string
          format: uuid
        stage:
          $ref: '#/components/schemas/PaymentReminderStage'
        state:
          $ref: '#/components/schemas/PaymentReminderState'
        date:
          type: string
        due_date:
          type: string
      required:
        - id
        - invoice_id
    ServiceContractPosition:
      title: ServiceContractPosition
      type: object
      properties:
        id:
          type: string
          format: uuid
        service_contract_id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        amount:
          type: number
        price:
          type: number
        vat_rate:
          type: number
      required:
        - id
        - service_contract_id
    ServiceContract:
      title: ServiceContract
      type: object
      properties:
        id:
          type: string
          format: uuid
        customer_id:
          type: integer
        title:
          type: string
        description:
          type: string
        runtime:
          type: string
          enum:
            - WEEKLY
            - MONTHLY
            - QUARTERLY
            - SEMI_ANNUAL
            - ANNUAL
        cancellation_period:
          type: integer
        accounting_period:
          type: string
          enum:
            - QUARTERLY
            - SEMI_ANNUAL
            - ANNUAL
      required:
        - id
        - customer_id
    CustomerTransactionType:
      type: string
      title: CustomerTransactionType
      enum:
        - INVOICE
        - REMINDER_FEE
        - ONLINE_PAYMENT
        - BANK
    InvoiceState:
      type: string
      title: InvoiceState
      enum:
        - DRAFT
        - PENDING
        - PAID
        - CANCELLED
        - FAILED
    InvoiceCreateRequestPosition:
      title: InvoiceCreateRequestPosition
      type: object
      properties:
        invoice_id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        amount:
          type: number
        unit:
          type: string
        price:
          type: number
        vat_rate:
          type: number
        group_key:
          type: string
      required:
        - title
        - description
        - amount
        - unit
        - price
    OfferState:
      type: string
      title: OfferState
      enum:
        - DRAFT
        - SENT
        - ACCEPTED
        - DENIED
    OfferCreateRequestPosition:
      title: OfferCreateRequestPosition
      type: object
      properties:
        offer_id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        interval:
          type: string
        amount:
          type: string
        price:
          type: string
        purchasing_price:
          type: string
        note:
          type: string
        vat_rate:
          type: string
    OfferPositionInterval:
      type: string
      title: OfferPositionInterval
      enum:
        - WEEKLY
        - MONTHLY
        - QUARTERLY
        - SEMI_ANNUAL
        - ANNUAL
    PaymentReminderStage:
      type: string
      title: PaymentReminderStage
      enum:
        - STAGE1
        - STAGE2
        - STAGE3
    PaymentReminderState:
      type: string
      title: PaymentReminderState
      enum:
        - DRAFT
        - PENDING
        - PAID
        - CANCELLED
        - FAILED
    ServiceContractInterval:
      type: string
      title: ServiceContractInterval
      enum:
        - WEEKLY
        - MONTHLY
        - QUARTERLY
        - SEMI_ANNUAL
        - ANNUAL
    ServiceContractCreateRequestPosition:
      title: ServiceContractCreateRequestPosition
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        amount:
          type: number
        price:
          type: number
        vat_rate:
          type: number
      required:
        - title
        - description
        - amount
        - price
  securitySchemes:
    AuthToken:
      type: http
      scheme: bearer
      description: ''
  responses:
    InvalidRequestResponse:
      description: Response for validation errors
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              data:
                type: object
              messages:
                $ref: '#/components/schemas/ResponseMessages'
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
            required:
              - success
              - messages
              - metadata
        application/xml:
          schema:
            type: object
            properties:
              success:
                type: boolean
              data:
                type: object
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - success
              - messages
    EmptyResponse:
      description: Empty Response
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
              messages:
                $ref: '#/components/schemas/ResponseMessages'
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
            required:
              - success
              - messages
              - metadata
    BankAccountListResponse:
      description: BankAccount List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/BankAccount'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    BankAccountSingleResponse:
      description: Single BankAccount
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/BankAccount'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    BankTransactionListResponse:
      description: BankTransaction List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/BankTransaction'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - pagination
              - messages
    BankTransactionSingleResponse:
      description: Single BankTransaction
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/BankTransaction'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    BillingPositionListResponse:
      description: BillingPosition List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/BillingPosition'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    BillingPositionSingleResponse:
      description: Single BillingPosition
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/BillingPosition'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    CustomerListResponse:
      description: Customer List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    CustomerSingleResponse:
      description: Single Customer
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/Customer'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    CustomerTransactionListResponse:
      description: CustomerTransaction List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerTransaction'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    CustomerTransactionSingleResponse:
      description: Single CustomerTransaction
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/CustomerTransaction'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    DebitListResponse:
      description: Debit List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Debit'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    DebitSingleResponse:
      description: Single Debit
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/Debit'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    DebitMandateListResponse:
      description: DebitMandate List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/DebitMandate'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    DebitMandateSingleResponse:
      description: Single DebitMandate
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/DebitMandate'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    FileListResponse:
      description: File List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/File'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - pagination
              - messages
    FileSingleResponse:
      description: Single File
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: string
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    FileDownloadResponse:
      description: FileDownload
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/FileDownload'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    InvoiceListResponse:
      description: Invoice List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    InvoiceSingleResponse:
      description: Single Invoice
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/Invoice'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    InvoicePositionListResponse:
      description: InvoicePosition List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/InvoicePosition'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    InvoicePositionSingleResponse:
      description: Single InvoicePosition
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/InvoicePosition'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    OfferListResponse:
      description: Offer List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Offer'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    OfferSingleResponse:
      description: Single Offer
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/Offer'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    OfferPositionListResponse:
      description: OfferPosition List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/OfferPosition'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    OfferPositionSingleResponse:
      description: Single OfferPosition
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/OfferPosition'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    OnlinePaymentListResponse:
      description: OnlinePayment List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/OnlinePayment'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    OnlinePaymentSingleResponse:
      description: Single OnlinePayment
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/OnlinePayment'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    PaymentReminderListResponse:
      description: PaymentReminder List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentReminder'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    PaymentReminderSingleResponse:
      description: Single PaymentReminder
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/PaymentReminder'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    ServiceContractListResponse:
      description: ServiceContract List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceContract'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    ServiceContractSingleResponse:
      description: Single ServiceContract
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/ServiceContract'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    ServiceContractPositionListResponse:
      description: ServiceContractPosition List
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceContractPosition'
              pagination:
                $ref: '#/components/schemas/ResponsePagination'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
    ServiceContractPositionSingleResponse:
      description: Single ServiceContractPosition
      content:
        application/json:
          schema:
            type: object
            properties:
              metadata:
                $ref: '#/components/schemas/ResponseMetadata'
              success:
                type: boolean
              data:
                $ref: '#/components/schemas/ServiceContractPosition'
              messages:
                $ref: '#/components/schemas/ResponseMessages'
            required:
              - metadata
              - success
              - data
              - messages
  requestBodies:
    BankAccountCreateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              bank_account_number:
                type: string
              bank_url:
                type: string
              bank_port:
                type: integer
              bank_code:
                type: string
              username:
                type: string
              password:
                type: string
            required:
              - title
              - bank_account_number
              - bank_url
              - bank_port
              - bank_code
              - username
              - password
    BankAccountUpdateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              bank_account_number:
                type: string
              bank_url:
                type: string
              bank_port:
                type: integer
              bank_code:
                type: string
              username:
                type: string
              password:
                type: string
    BillingPositionCreateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              customer_id:
                type: integer
              invoice_position_id:
                type: string
                format: uuid
              title:
                type: string
              description:
                type: string
              amount:
                type: number
              price:
                type: number
              vat_rate:
                type: number
              group_key:
                type: string
              available_at:
                type: string
            required:
              - customer_id
              - title
              - description
              - amount
              - price
    BillingPositionUpdateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              customer_id:
                type: integer
              invoice_position_id:
                type: string
                format: uuid
              title:
                type: string
              description:
                type: string
              amount:
                type: number
              price:
                type: number
              vat_rate:
                type: number
              group_key:
                type: string
              available_at:
                type: string
    CustomerCreateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              user_id:
                type: string
                format: uuid
              company_name:
                type: string
              first_name:
                type: string
              last_name:
                type: string
              street:
                type: string
              street_number:
                type: string
              additional_address:
                type: string
              postal_code:
                type: string
              city:
                type: string
              country_code:
                type: string
              email:
                type: string
              invoice_shipping_type:
                $ref: '#/components/schemas/InvoiceShippingType'
              balance:
                type: number
              credit_limit:
                type: number
              vat_id:
                type: string
              custom_vat_rate:
                type: number
              billing_interval:
                $ref: '#/components/schemas/BillingInterval'
              payment_period:
                type: integer
            required:
              - user_id
              - first_name
              - last_name
              - street
              - street_number
              - postal_code
              - city
              - country_code
              - email
              - credit_limit
              - vat_id
              - custom_vat_rate
              - billing_interval
              - payment_period
    CustomerTransactionCreateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              customer_id:
                type: integer
              title:
                type: string
              amount:
                type: number
              type:
                $ref: '#/components/schemas/CustomerTransactionType'
              object_id:
                type: string
                format: uuid
              date:
                type: string
            required:
              - customer_id
              - title
              - amount
              - type
              - object_id
    CustomerTransactionUpdateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              customer_id:
                type: integer
              title:
                type: string
              amount:
                type: number
              type:
                $ref: '#/components/schemas/CustomerTransactionType'
              object_id:
                type: string
                format: uuid
              date:
                type: string
    CustomerUpdateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              company_name:
                type: string
              first_name:
                type: string
              last_name:
                type: string
              street:
                type: string
              street_number:
                type: string
              additional_address:
                type: string
              postal_code:
                type: string
              city:
                type: string
              country_code:
                type: string
              email:
                type: string
              invoice_shipping_type:
                $ref: '#/components/schemas/InvoiceShippingType'
              balance:
                type: number
              credit_limit:
                type: number
              vat_id:
                type: string
              custom_vat_rate:
                type: number
              billing_interval:
                $ref: '#/components/schemas/BillingInterval'
              payment_period:
                type: integer
    DebitMandateCreateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              customer_id:
                type: integer
              depositor:
                type: string
              street:
                type: string
              street_number:
                type: string
              additional_address:
                type: string
              postal_code:
                type: string
              city:
                type: string
              country_code:
                type: string
              bank_code:
                type: string
              bank_name:
                type: string
              account_number:
                type: string
              signed_at:
                type: string
              valid_until:
                type: string
            required:
              - customer_id
              - depositor
              - street
              - street_number
              - additional_address
              - postal_code
              - city
              - country_code
              - bank_code
              - bank_name
              - account_number
    InvoiceCreateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              customer_id:
                type: integer
              due_at:
                type: string
              state:
                $ref: '#/components/schemas/InvoiceState'
              paid_at:
                type: string
              cancelled_at:
                type: string
              positions:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceCreateRequestPosition'
            required:
              - customer_id
              - due_at
    InvoicePositionCreateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              invoice_id:
                type: string
                format: uuid
              title:
                type: string
              description:
                type: string
              amount:
                type: number
              unit:
                type: string
              price:
                type: number
              vat_rate:
                type: number
              group_key:
                type: string
            required:
              - invoice_id
              - title
              - description
              - amount
              - unit
              - price
    InvoicePositionUpdateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              invoice_id:
                type: string
                format: uuid
              title:
                type: string
              description:
                type: string
              amount:
                type: number
              unit:
                type: string
              price:
                type: number
              vat_rate:
                type: number
              group_key:
                type: string
    InvoiceUpdateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              customer_id:
                type: integer
              due_at:
                type: string
              state:
                $ref: '#/components/schemas/InvoiceState'
              paid_at:
                type: string
              cancelled_at:
                type: string
    OfferCreateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              customer_id:
                type: integer
              number:
                type: string
              net_amount:
                type: number
              amount:
                type: number
              state:
                $ref: '#/components/schemas/OfferState'
            required:
              - customer_id
    OfferPositionCreateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              offer_id:
                type: string
                format: uuid
              title:
                type: string
              description:
                type: string
              interval:
                $ref: '#/components/schemas/OfferPositionInterval'
              amount:
                type: number
              price:
                type: number
              purchasing_price:
                type: number
              note:
                type: string
              vat_rate:
                type: number
            required:
              - offer_id
              - title
              - description
              - amount
              - price
    OfferPositionUpdateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
              interval:
                $ref: '#/components/schemas/OfferPositionInterval'
              amount:
                type: number
              price:
                type: number
              purchasing_price:
                type: number
              note:
                type: string
              vat_rate:
                type: number
    OfferUpdateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              customer_id:
                type: integer
              net_amount:
                type: number
              amount:
                type: number
              state:
                $ref: '#/components/schemas/OfferState'
    PaymentReminderCreateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              customer_id:
                type: integer
              invoice_id:
                type: string
                format: uuid
              stage:
                type: string
              state:
                type: string
              date:
                type: string
              due_date:
                type: string
            required:
              - customer_id
              - invoice_id
    PaymentReminderUpdateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              stage:
                $ref: '#/components/schemas/PaymentReminderStage'
              state:
                $ref: '#/components/schemas/PaymentReminderState'
              date:
                type: string
              due_date:
                type: string
    ServiceContractCreateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              customer_id:
                type: integer
              title:
                type: string
              description:
                type: string
              runtime:
                $ref: '#/components/schemas/ServiceContractInterval'
              cancellation_period:
                type: integer
              accounting_period:
                $ref: '#/components/schemas/ServiceContractInterval'
              positions:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceContractCreateRequestPosition'
            required:
              - customer_id
              - title
              - description
              - runtime
              - cancellation_period
              - accounting_period
    ServiceContractPositionCreateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              service_contract_id:
                type: string
                format: uuid
              title:
                type: string
              description:
                type: string
              amount:
                type: number
              price:
                type: number
              vat_rate:
                type: number
            required:
              - service_contract_id
              - title
              - description
              - amount
              - price
              - vat_rate
    ServiceContractPositionUpdateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
              amount:
                type: number
              price:
                type: number
              vat_rate:
                type: number
    ServiceContractUpdateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
              runtime:
                $ref: '#/components/schemas/ServiceContractInterval'
              cancellation_period:
                type: integer
              accounting_period:
                $ref: '#/components/schemas/ServiceContractInterval'
  parameters:
    PaginationPage:
      name: page
      in: query
      schema:
        type: integer
        minimum: 1
      description: Page
    PaginationPageSize:
      name: page_size
      in: query
      required: false
      schema:
        type: integer
        default: 10
      description: Page Size
    Search:
      name: search
      in: query
      required: false
      schema:
        type: string
      description: Search
security:
  - AuthToken: []
tags:
  - name: billing
  - name: customers
  - name: general
  - name: payment
